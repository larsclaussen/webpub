{
  "name": "Webpub",
  "tagline": "web pub test",
  "body": "### plpgsql snippets\r\n\r\n\r\n    CREATE OR REPLACE FUNCTION create_calc_pnts()\r\n      RETURNS trigger AS\r\n    $BODY$\r\n    DECLARE\r\n      counter integer := 1;\r\n      test_me varchar(100);\r\n      user_ref varchar(50);\r\n      line_frac double precision := 0.0;\r\n      dist_calc_points double precision;\r\n      cseg double precision := 1;\r\n      _cseg double precision;\r\n      calc_pnt geometry;\r\n    BEGIN\r\n      dist_calc_points := NEW.dist_calc_points::double precision;\r\n      _cseg := round(ST_Length(NEW.the_geom) / dist_calc_points);\r\n      IF (_cseg > 1) THEN\r\n         cseg := _cseg;\r\n      END IF;\r\n      RAISE NOTICE 'cseg %', cseg;\r\n      FOR i IN 1..cseg+1\r\n          LOOP\r\n          RAISE NOTICE 'i % in loop', i;\r\n          RAISE NOTICE 'line_frac % ', line_frac;\r\n\r\n          calc_pnt := ST_LineInterpolatePoint(NEW.the_geom, line_frac);\r\n          line_frac := line_frac + (1.0/cseg);\r\n          IF NOT EXISTS (\r\n                  SELECT the_geom FROM v2_calculation_point\r\n                  WHERE ST_DWithin(the_geom, calc_pnt, 0.0001))\r\n          THEN\r\n              user_ref := concat_ws('-', NEW.id ::text, TG_ARGV[0], counter::text);\r\n              RAISE NOTICE 'Calling create_calc_pnts(%)', i;\r\n              INSERT INTO\r\n                   v2_calculation_point(content_type_id, user_ref, calc_type, the_geom)\r\n              VALUES(NEW.id, user_ref, NEW.calculation_type, calc_pnt);\r\n          END IF;\r\n          counter := counter +1;\r\n        END LOOP;\r\n        RETURN NEW;\r\n    END\r\n    $BODY$\r\n      LANGUAGE plpgsql VOLATILE\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}